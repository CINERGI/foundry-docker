version: '3.4'

services:
 #https://github.com/docker-library/repo-info/blob/master/repos/mongo/remote/3-stretch.md
  mongodb:
    image: mongo:3
    container_name: foundry-mongo
    hostname: mongodb
    ports:
      - 27017:27017
      - 27018:27018
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: cinergi
    volumes:
      - mongodb1:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - default
#https://hub.docker.com/r/webcenter/activemq/
 # https://hub.docker.com/r/woahbase/alpine-activemq/
# https://dzone.com/articles/building-active-mq-docker-image-on-k8s
  servicebus:
    image:  woahbase/alpine-activemq
    container_name: foundry-servicebus
    hostname: servicebus
    networks:
      - default
    ports:
      - 8161:8161
#      - 61613:61613
      - 61616:61616

  dispatcher:
    build:
      context: foundry
      target: foundrybase
    container_name: foundry-dispatcher
    hostname: ec-dispatcher
    entrypoint: /bin/bash docker_dispatcher.sh
    stdin_open: true
    tty: true
    depends_on:
      - mongodb
      - servicebus
    ports:
      - "9000:9000"
    environment:
      - es_cluster=es-geoportal
      - es_node=elasticsearch
    volumes:
      - foundryData:/data
      - gptmetadata:/opt/tomcat/webapps/metadata
#    links:
#      - consumer:consumer
    networks:
      - default


  consumer:
    build:
      context: foundry
      target: foundrybase
    container_name: foundry-consumer
    hostname: consumer
    entrypoint: /bin/bash docker_consumer_head.sh
    depends_on:
      - dispatcher
    ulimits:
      memlock:
          soft: -1
          hard: -1
    volumes:
      - foundryData:/data
    environment:
      - es_node=elasticsearch
    networks:
      - default
#    deploy:
#      resources:
#        limits:
#          cpus: '0.50'
#          memory: 512M
#        reservations:
#          cpus: '0.25'
#          memory: 512M

  manager:
    build:
      context: foundry
      target: foundrybase
    container_name: foundry-manager
    hostname: manager
    entrypoint: /bin/bash docker_manager.sh
#    entrypoint: /bin/bash
    stdin_open: true
    tty: true
    depends_on:
      - mongodb
      - servicebus
    environment:
      - es_node=elasticsearch
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - foundryData:/data
    networks:
      - default

  foundryweb:
    build:
      context: foundry
      target: foundryweb
    container_name: foundry-web
    hostname: foundry
    ports:
      # keep it off 8080 on local dev
      - "8082:8080"
    depends_on:
      - mongodb
      - servicebus
    environment:
      - es_node=elasticsearch
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - foundryData:/data
      - gptmetadata:/opt/tomcat/webapps/metadata
    networks:
      - default

#    deploy:
#      resources:
#        limits:
#          cpus: '0.50'
#          memory: 512M
#        reservations:
#          cpus: '0.25'
#          memory: 256M

# ########pain point removed
# requires creation of an  geoportal network.
# docker network geoportal create
###########
#networks:
#  default:
#    external:
#      name: geoportal

volumes:
  foundryData:
    driver: local
  mongodb1:
    driver: local
  gptmetadata:
    driver: local