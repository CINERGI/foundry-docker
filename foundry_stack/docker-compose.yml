version: '3.6'
# NOTE: YOU NEED TO copy settings.env.example to settings.env
# todo:
# - refactor with overrides
# -- prodction override with additional instances of dispatcher/consumer/ingestor
# - arg for settings file
# - secrets
# - nginx and SSL for production deployment
# - merged gpt and foundry for production
services:
 #https://github.com/docker-library/repo-info/blob/master/repos/mongo/remote/3-stretch.md
  mongodb:
    image: mongo:3
    container_name: foundry-mongo
    hostname: mongodb
    ports:
      - 27017:27017
      - 27018:27018
    restart: always
    env_file:
     - foundry/config/setttings.env
    volumes:
      - mongodb1:/data/db
      - ./foundry/mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./foundry/mongodb/mongo-seed.js:/docker-entrypoint-initdb.d/mongo-seed.js:ro
    networks:
      - datastudio
#https://hub.docker.com/r/webcenter/activemq/
 # https://hub.docker.com/r/woahbase/alpine-activemq/
# https://dzone.com/articles/building-active-mq-docker-image-on-k8s
  servicebus:
    image:  webcenter/activemq
    container_name: foundry-servicebus
    hostname: servicebus
    networks:
      - datastudio
    ports:
      - 8161:8161
#      - 61613:61613
      - 61616:61616

  dispatcher:
    build:
      context: foundry
      target: dispatcher
    container_name: foundry-dispatcher
    hostname: ec-dispatcher
    entrypoint: /bin/bash docker_dispatcher.sh
    stdin_open: true
    tty: true
    depends_on:
      - mongodb
      - servicebus
    ports:
      - "9000:9000"
    env_file:
      - foundry/config/setttings.env
    volumes:
      - foundryData:/data/logs
      - foundryWaf:/data/waf
      - foundryPlugins:/data/foundry
#    links:
#      - consumer:consumer
    networks:
      - datastudio


  consumer:
    build:
      context: foundry
      target: consumer
    container_name: foundry-consumer
    hostname: consumer
    entrypoint: /bin/bash docker_consumer_head.sh
    depends_on:
      - dispatcher
    ulimits:
      memlock:
          soft: -1
          hard: -1
    volumes:
      - foundryData:/data/logs
      - foundryWaf:/data/waf
      - foundryPlugins:/data/foundry
    env_file:
      - foundry/config/setttings.env
    networks:
      - datastudio
#    deploy:
#      resources:
#        limits:
#          cpus: '0.50'
#          memory: 512M
#        reservations:
#          cpus: '0.25'
#          memory: 512M

# Run script on dispatcher
#  manager:
#    build:
#      context: foundry
#      target: dispatcher
#    container_name: foundry-manager
#    hostname: manager
#    entrypoint: /bin/bash docker_manager.sh
##    entrypoint: /bin/bash
#    stdin_open: true
#    tty: true
#    depends_on:
#      - mongodb
#      - servicebus
#    environment:
#      - es_node=elasticsearch
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    volumes:
#      - foundryData:/data
#    networks:
#      - datastudio

#  ingestor:
#    build:
#      context: foundry
#      target: ingestor
#    container_name: foundry-ingestor
#    hostname: ingestor
#    #entrypoint: /bin/bash docker_ingest_src_cli.sh
#    entrypoint: /bin/bash
#    stdin_open: true
#    tty: true
#    depends_on:
#      - mongodb
#      - servicebus
#    env_file:
#      - foundry/config/setttings.env
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    volumes:
#      - foundryData:/data/logs
#      - foundryWaf:/data/waf
#      - foundryPlugins:/data/foundry
#
#    networks:
#      - datastudio


  foundryweb:
    build:
      context: foundry
      target: foundryweb
    container_name: foundry-web
    hostname: foundry
    ports:
      # keep it off 8080 on local dev
      - "8083:8080"
    depends_on:
      - mongodb
      - servicebus
    env_file:
      - foundry/config/setttings.env
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - foundryData:/data/logs
      - foundryWaf:/data/waf:ro
      - foundryPlugins:/data/foundry:ro
      - tomcatLogs:/usr/local/tomcat/logs
    networks:
      - datastudio

#    deploy:
#      resources:
#        limits:
#          cpus: '0.50'
#          memory: 512M
#        reservations:
#          cpus: '0.25'
#          memory: 256M

# ########pain point removed
# requires creation of an  geoportal network.
# docker network geoportal create
###########
networks:
  datastudio:
    external:
      name: datastudio

volumes:
  foundryData:
    driver: local
  foundryWaf:
      driver: local
  foundryPlugins:
        driver: local
  tomcatLogs:
    driver: local
  mongodb1:
    driver: local
